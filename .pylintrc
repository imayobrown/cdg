[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Add files or directories matching the regex patterns to the blacklist. The
# regex matches against base names, not paths.
ignore-patterns=

# Pickle collected data for later comparisons.
persistent=yes

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=

# Use multiple processes to speed up Pylint.
jobs=1

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-whitelist=

# Allow optimization of some AST trees. This will activate a peephole AST
# optimizer, which will apply various small optimizations. For instance, it can
# be used to obtain the result of joining multiple strings with the addition
# operator. Joining a lot of strings can lead to a maximum recursion error in
# Pylint and this flag can prevent that. It has one side effect, the resulting
# AST will be different than the one from reality. This option is deprecated
# and it will be removed in Pylint 2.0.
optimize-ast=no


[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence=

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once). See also the "--disable" option for examples.
# Make sure disable come before enable otherwise all will be enabled.
disable=all

enable=#blacklisted-name,
        #invalid-name,
        #missing-docstring,
        #empty-docstring,
        #unneeded-not,
        #singleton-comparison,
        #misplaced-comparison-constant,
        #unidiomatic-typecheck,
        #consider-using-enumerate,
        #consider-iterating-dictionary,
        #bad-classmethod-argument,
        #bad-mcs-method-argument,
        #bad-mcs-classmethod-argument,
        #line-too-long,
        #too-many-lines,
        #trailing-whitespace,
        #missing-final-newline,
        #trailing-newlines,
        #multiple-statements,
        #superfluous-parens,
        #bad-whitespace,
        #mixed-line-endings,
        #unexpected-line-ending-format,
        #bad-continuation,
        #wrong-spelling-in-comment,
        #wrong-spelling-in-docstring,
        #invalid-characters-in-docstring,
        #multiple-imports,
        #wrong-import-order,
        #ungrouped-imports,
        #wrong-import-position,
        #old-style-class,
        #syntax-error,
        #unrecognized-inline-option,
        #bad-option-value,
        #init-is-generator,
        #return-in-init,
        #function-redefined,
        #not-in-loop,
        #return-outside-function,
        #yield-outside-function,
        #return-arg-in-generator,
        #nonexistent-operator,
        #duplicate-argument-name,
        #abstract-class-instantiated,
        #bad-reversed-sequence,
        #continue-in-finally,
        #method-hidden,
        #access-member-before-definition,
        #no-method-argument,
        #no-self-argument,
        #invalid-slots-object,
        #assigning-non-slot,
        #invalid-slots,
        #inherit-non-class,
        #inconsistent-mro,
        #duplicate-bases,
        #non-iterator-returned,
        #unexpected-special-method-signature,
        #invalid-length-returned,
        #import-error,
        #used-before-assignment,
        #undefined-variable,
        #undefined-all-variable,
        #invalid-all-object,
        #no-name-in-module,
        #unbalanced-tuple-unpacking,
        #unpacking-non-sequence,
        #bad-except-order,
        #raising-bad-type,
        #misplaced-bare-raise,
        #raising-non-exception,
        #notimplemented-raised,
        #catching-non-exception,
        #slots-on-old-class,
        #super-on-old-class,
        #bad-super-call,
        #missing-super-argument,
        #no-member,
        #not-callable,
        #assignment-from-no-return,
        #no-value-for-parameter,
        #too-many-function-args,
        #unexpected-keyword-arg,
        #redundant-keyword-arg,
        #invalid-sequence-index,
        #invalid-slice-index,
        #assignment-from-none,
        #not-context-manager,
        #invalid-unary-operand-type,
        #unsupported-binary-operation,
        #repeated-keyword,
        #not-an-iterable,
        #not-a-mapping,
        #unsupported-membership-test,
        #unsubscriptable-object,
        #logging-unsupported-format,
        #logging-format-truncated,
        #logging-too-many-args,
        #logging-too-few-args,
        #bad-format-character,
        #truncated-format-string,
        #mixed-format-string,
        #format-needs-mapping,
        #missing-format-string-key,
        #too-many-format-args,
        #too-few-format-args,
        #bad-str-strip-call,
        #print-statement,
        #parameter-unpacking,
        #unpacking-in-except,
        #old-raise-syntax,
        #backtick,
        #long-suffix,
        #old-ne-operator,
        #old-octal-literal,
        #import-star-module-level,
        #fatal,
        #astroid-error,
        #parse-error,
        #method-check-failed,
        #raw-checker-failed,
        #bad-inline-option,
        #locally-disabled,
        #locally-enabled,
        #file-ignored,
        #suppressed-message,
        #useless-suppression,
        #deprecated-pragma,
        #too-many-nested-blocks,
        #simplifiable-if-statement,
        #no-self-use,
        #no-classmethod-decorator,
        #no-staticmethod-decorator,
        #redefined-variable-type,
        #cyclic-import,
        #duplicate-code,
        #too-many-ancestors,
        #too-many-instance-attributes,
        #too-few-public-methods,
        #too-many-public-methods,
        #too-many-return-statements,
        #too-many-branches,
        #too-many-arguments,
        #too-many-locals,
        #too-many-statements,
        #too-many-boolean-expressions,
        #unreachable,
        #dangerous-default-value,
        #pointless-statement,
        #pointless-string-statement,
        #expression-not-assigned,
        #unnecessary-pass,
        #unnecessary-lambda,
        #duplicate-key,
        #deprecated-lambda,
        #useless-else-on-loop,
        #exec-used,
        #eval-used,
        #confusing-with-statement,
        #using-constant-test,
        #lost-exception,
        #assert-on-tuple,
        #attribute-defined-outside-init,
        #bad-staticmethod-argument,
        #protected-access,
        #arguments-differ,
        #signature-differs,
        #abstract-method,
        #super-init-not-called,
        #no-init,
        #non-parent-init-called,
        #unnecessary-semicolon,
        #bad-indentation,
        #mixed-indentation,
        #lowercase-l-suffix,
        #wildcard-import,
        #deprecated-module,
        #relative-import,
        #reimported,
        #import-self,
        #misplaced-future,
        #fixme,
        #invalid-encoded-data,
        #global-variable-undefined,
        #global-variable-not-assigned,
        #global-statement,
        #global-at-module-level,
        #unused-import,
        #unused-variable,
        #unused-argument,
        #unused-wildcard-import,
        #redefined-outer-name,
        #redefined-builtin,
        #redefine-in-handler,
        #undefined-loop-variable,
        #cell-var-from-loop,
        #bare-except,
        #broad-except,
        #duplicate-except,
        #nonstandard-exception,
        #binary-op-exception,
        #property-on-old-class,
        #logging-not-lazy,
        #logging-format-interpolation,
        #bad-format-string-key,
        #unused-format-string-key,
        #bad-format-string,
        #missing-format-argument-key,
        #unused-format-string-argument,
        #format-combined-specification,
        #missing-format-attribute,
        #invalid-format-index,
        #anomalous-backslash-in-string,
        #anomalous-unicode-escape-in-string,
        #bad-open-mode,
        #boolean-datetime,
        #redundant-unittest-assert,
        #deprecated-method,
        #apply-builtin,
        #basestring-builtin,
        #buffer-builtin,
        #cmp-builtin,
        #coerce-builtin,
        #execfile-builtin,
        #file-builtin,
        #long-builtin,
        #raw_input-builtin,
        #reduce-builtin,
        #standarderror-builtin,
        #unicode-builtin,
        #xrange-builtin,
        #coerce-method,
        #delslice-method,
        #getslice-method,
        #setslice-method,
        #no-absolute-import,
        #old-division,
        #dict-iter-method,
        #dict-view-method,
        #next-method-called,
        #metaclass-assignment,
        #indexing-exception,
        #raising-string,
        #reload-builtin,
        #oct-method,
        #hex-method,
        #nonzero-method,
        #cmp-method,
        #input-builtin,
        #round-builtin,
        #intern-builtin,
        #unichr-builtin,
        #map-builtin-not-iterating,
        #zip-builtin-not-iterating,
        #range-builtin-not-iterating,
        #filter-builtin-not-iterating,
        #using-cmp-argument

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]". This option is deprecated
# and it will be removed in Pylint 2.0.
files-output=no

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=


[BASIC]

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# List of decorators that produce properties, such as abc.abstractproperty. Add
# to this list to register other decorators that produce valid properties.
property-classes=abc.abstractproperty

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for function names
function-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for variable names
variable-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming hint for constant names
const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for attribute names
attr-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for argument names
argument-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Naming hint for class attribute names
class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming hint for inline iteration names
inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming hint for class names
class-name-hint=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming hint for module names
module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for method names
method-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1


[ELIF]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5


[FORMAT]

# Maximum number of characters on a single line.
# max-line-length=140

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=no

# List of optional constructs for which whitespace checking is disabled. `dict-
# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\n222: 2}.
# `trailing-comma` allows a space between comma and closing bracket: (a, ).
# `empty-line` allows space-only lines.
no-space-check=trailing-comma,dict-separator

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1
# tab).
indent-string='    '

# Number of spaces of indent required inside a hanging  or continued line.
indent-after-paren=4

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=


[LOGGING]

# Logging modules to check that the string format arguments are in logging
# function parameter format
logging-modules=logging


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no


[SPELLING]

# Spelling dictionary name. Available dictionaries: none. To make it working
# install python-enchant package.
spelling-dict=

# List of comma separated words that should not be checked.
spelling-ignore-words=

# A path to a file that contains private dictionary; one word per line.
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary in
# --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words=no


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=

# List of class names for which member attributes should not be checked (useful
# for classes with dynamically set attributes). This supports the use of
# qualified names.
ignored-classes=optparse.Values,thread._local,_thread._local

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members=

# List of decorators that produce context managers, such as
# contextlib.contextmanager. Add to this list to register other decorators that
# produce valid context managers.
contextmanager-decorators=contextlib.contextmanager


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=(_+[a-zA-Z0-9]*?$)|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=

# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks=cb_,_cb

# List of qualified module names which can have objects that can redefine
# builtins.
redefining-builtins-modules=six.moves,future.builtins


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=_asdict,_fields,_replace,_source,_make


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

# Maximum number of boolean expressions in a if statement
max-bool-expr=5


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=

# Force import order to recognize a module as part of the standard
# compatibility libraries.
known-standard-library=

# Force import order to recognize a module as part of a third party library.
known-third-party=enchant

# Analyse import fallback blocks. This can be used to support both Python 2 and
# 3 compatible code, which means that the block might have code that exists
# only in one or another interpreter, leading to false positives when analysed.
analyse-fallback-blocks=no


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
